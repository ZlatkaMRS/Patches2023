---
title: "Patches"
author: "ZR"
date: "8/18/2025"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

`

## Libraries
```{r}
library(readr)
library(readxl)
library(ggplot2)
library(hrbrthemes)
library(ggbump)
library(tidyverse)
```


## Add Data

```{r}
AGBM <- read_csv("Data/AGBM.csv")
BGBM <- read_excel("Data/BGBM.xlsx")
AG_Pct <- read_excel("Data/AG_Pct.xlsx")
Soil <- read_excel("Data/Soil.xlsx")
BGBM_Aggregated <- read_excel("Data/BGBM.xlsx", sheet = "BGBM_Aggregated")
TotalCarbon <- read_csv("Data/TotalCarbon.csv")
```

## Organize data
### AG biomass and cover
### BGBM
### Soil C
```{r}

```


## Plots

```{r}
# AGBM
ggplot(AGBM, aes(x=`SECTION`, y=`CarbonAGBM(kgC/m2)`, color=SITE_ID)) + 
    geom_violin() +
  facet_grid(SITE_ID ~ PATCH, scales = "fixed")+
    theme_classic()

ggplot(AGBM, aes(x=`Area_m2`, y=`Perimeter_m`, color=SITE_ID)) + 
    geom_point() +
    theme_classic()

ggplot(AGBM, aes(x=`Area_m2`, y=`CarbonAGBM(kgC/m2)`, color=SITE_ID)) + 
    geom_point() +
    theme_classic()

ggplot(AGBM, aes(x=`IsoperimetricInequality(Q)`, y=`CarbonAGBM(kgC/m2)`, color=SITE_ID)) + 
    geom_point() +
    theme_classic()

ggplot(AGBM, aes(x=`Perimeter_m`, y=`CarbonAGBM(kgC/m2)`, color=SITE_ID)) + 
    geom_point() +
    theme_classic()

ggplot(AGBM, aes(x=`IsoperimetricInequality(Q)`, y=`CarbonAGBM(kgC/m2)`, color=SECTION)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(~SITE_ID, scales = "free")+
  theme_classic()

ggplot(AGBM, aes(x=`Area_m2`, y=`CarbonAGBM(kgC/m2)`, color=SECTION)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(~SITE_ID, scales = "free")+
  theme_classic()
```

```{r}
#BGBM

  ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=SITE_ID)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(SampleType ~ Patch, scales = "free")+
    theme_classic()

ggplot(BGBM_Aggregated, aes(x=`Area_m2`, y=`Biomass/core_g/m2`, color=SampleType)) + 
    geom_point() +
  geom_smooth()+
    theme_classic()
ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=SampleType)) + 
    geom_point() +
  geom_smooth()+
    theme_classic()

ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=SampleType)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(SITE_ID ~ Patch, scales = "fixed")+
    theme_classic()

ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=SampleType)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(SITE_ID ~ Patch, scales = "free")+
    theme_classic()

ggplot(BGBM_Aggregated, aes(x=`P2A`, y=`Biomass/core_g/m2`, color=SampleType)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(SITE_ID ~ Patch, scales = "free")+
    theme_classic()

```

```{r}
## Boxplot area/shape ?
ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=SampleType)) + 
    geom_boxplot()+
  facet_grid(SITE_ID ~ Patch, scales = "free")+
    theme_classic()
ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=SampleType)) + 
    geom_boxplot()+
  facet_grid(SITE_ID ~ Section, scales = "free")+
    theme_classic()

ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=Area_m2)) + 
    geom_boxplot()+
  facet_grid(SITE_ID ~ SampleType, scales = "free")+
    theme_classic()
##
```
```{r}
## Live roots only graphs
LiveBGBM <- filter(BGBM_Aggregated, SampleType == "AliveRoots")

ggplot(LiveBGBM, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=SITE_ID)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(SITE_ID ~ Patch, scales = "free")+
    theme_classic()

ggplot(LiveBGBM, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=SITE_ID)) + 
    geom_point() +
  geom_smooth()+
#  facet_grid(SITE_ID ~ Patch, scales = "free")+
    theme_classic()

ggplot(LiveBGBM, aes(x=`Area_m2`, y=`Biomass/core_g/m2`, color=SITE_ID)) + 
    geom_point() +
  geom_smooth()+
#  facet_grid(SITE_ID ~ Patch, scales = "free")+
    theme_classic()

```

```{r}
ggplot(LiveBGBM, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=Area_m2)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(SITE_ID ~ Patch, scales = "free")+
    theme_classic()

ggplot(LiveBGBM, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=Area_m2)) + 
    geom_point() +
  geom_smooth()+
    theme_classic()

ggplot(LiveBGBM, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=SITE_ID)) + 
    geom_point() +
  geom_smooth()+
    theme_classic()

ggplot(LiveBGBM, aes(x=`Area_m2`, y=`Biomass/core_g/m2`, color=SITE_ID)) + 
    geom_point() +
  geom_smooth()+
    theme_classic()
```
```{r}
# Graphs divided per site, shape and area

ggplot(LiveBGBM, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=Section)) + 
    geom_point() +
  geom_smooth()+
  facet_grid( ~ SITE_ID, scales = "free")+
    theme_classic()

ggplot(LiveBGBM, aes(x=`Area_m2`, y=`Biomass/core_g/m2`, color=Section)) + 
    geom_point() +
  geom_smooth()+
  facet_grid( ~ SITE_ID, scales = "free")+
    theme_classic()

ggplot(LiveBGBM, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`)) + 
    geom_point() +
  geom_smooth()+
  facet_grid( ~ SITE_ID, scales = "free")+
    theme_classic()

ggplot(LiveBGBM, aes(x=`Area_m2`, y=`Biomass/core_g/m2`)) + 
    geom_point() +
  geom_smooth()+
  facet_grid( ~ SITE_ID, scales = "free")+
    theme_classic()

ggplot(LiveBGBM, aes(x=`P2A`, y=`Biomass/core_g/m2`)) + 
    geom_point() +
  geom_smooth()+
  facet_grid( ~ SITE_ID, scales = "free")+
    theme_classic()

ggplot(LiveBGBM, aes(x=`P1A`, y=`Biomass/core_g/m2`)) + 
    geom_point() +
  geom_smooth()+
  facet_grid( ~ SITE_ID, scales = "free")+
    theme_classic()
```

```{r}
ggplot(BGBM, aes(x=`IsoperimetricInequality(Q)`, y=`g/m2`, color=Section)) + 
    geom_point() +
  geom_smooth()+
  facet_grid( SampleType~ SITE_ID, scales = "free")+
    theme_classic()

ggplot(BGBM, aes(x=`IsoperimetricInequality(Q)`, y=`g/m2`, color=Subsection)) + 
  geom_point() +
  geom_smooth()+
  facet_grid( SampleType~ SITE_ID, scales = "free")+
    theme_classic()

ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=Section)) + 
  geom_point() +
  geom_smooth()+
  facet_grid(~SITE_ID, scales = "free")+
  theme_classic()


ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=Section)) + 
    geom_point() +
  geom_smooth()+
  facet_wrap(~SITE_ID, scales = "free")+
  theme_classic()

ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=Section)) + 
    geom_point() +
  geom_smooth()+
  facet_wrap(~SampleType, scales = "free")+
  theme_classic()

```
```{r}
#Group by mean biomass of roots
BGBM_mean <- BGBM_Aggregated %>%
  group_by(`IsoperimetricInequality(Q)`, `Area_m2`, Section, SITE_ID) %>%
  summarise(mean_biomass = mean(`Biomass/core_g/m2`, na.rm = TRUE))

ggplot(BGBM_mean, aes(x=`IsoperimetricInequality(Q)`, y=`mean_biomass`, color=Section)) +
  geom_point() +
  geom_smooth() +
  facet_grid(~SITE_ID, scales = "free") +
  theme_classic()

ggplot(BGBM_mean, aes(x=`Area_m2`, y=`mean_biomass`, color=Section)) +
  geom_point() +
  geom_smooth() +
  facet_grid(~SITE_ID, scales = "free") +
  theme_classic()

```

```{r}
ggplot(BGBM_Aggregated, aes(x=`Area_m2`, y=`Biomass/core_g/m2`, color=Section)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(~SITE_ID, scales = "free")+
  theme_classic()

ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=Section)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(~SITE_ID, scales = "free")+
  theme_classic()

# Plot for Area_m2
ggplot(BGBM_Aggregated, aes(x=`Area_m2`, y=`Biomass/core_g/m2`, color=Section)) +
  geom_point() +
  geom_smooth(se = FALSE, method = "loess", span = 0.3) + # Use loess and adjust span for smoothness
  facet_grid(~SITE_ID, scales = "free") +
  theme_classic()

# Plot for IsoperimetricInequality(Q)
ggplot(BGBM_Aggregated, aes(x=`IsoperimetricInequality(Q)`, y=`Biomass/core_g/m2`, color=Section)) +
  geom_point() +
  geom_smooth(se = FALSE, method = "loess", span = 0.3) + # Use loess and adjust span for smoothness
  facet_grid(~SITE_ID, scales = "free") +
  theme_classic()
```

```{r}
ggplot(TotalCarbon, aes(x=`Area_m2`, y=`MgC/Ha`, color=SECTION)) + 
    geom_point() +
  geom_smooth(method = "gam", se = FALSE)+
  facet_wrap(~CarbonPool, scales = "free")+
  theme_classic()

ggplot(TotalCarbon, aes(x=`IsoperimetricInequality(Q)`, y=`MgC/Ha`, color=SECTION)) + 
    geom_point() +
  geom_smooth(method = "gam", se = FALSE)+
  facet_wrap(~CarbonPool, scales = "free")+
  theme_classic()
```
```{r}
# Total carbon together everything
ggplot(TotalCarbon, aes(x=`Area_m2`, y=`MgC/Ha`, color=CarbonPool)) + 
    geom_point() +
  geom_smooth()+
    theme_classic()

ggplot(TotalCarbon, aes(x=`IsoperimetricInequality(Q)`, y=`MgC/Ha`, color=CarbonPool)) + 
    geom_point() +
  geom_smooth()+
  theme_classic()

ggplot(TotalCarbon, aes(x=`Area_m2`, y=`MgC/Ha`, color=CarbonPool)) + 
    geom_point() +
  geom_smooth(method = "glm", se = FALSE)+
    theme_classic()

ggplot(TotalCarbon, aes(x=`IsoperimetricInequality(Q)`, y=`MgC/Ha`, color=CarbonPool)) + 
    geom_point() +
  geom_smooth(method = "glm", se = FALSE)+
  theme_classic()

```

```{r}
#Divided by carbon pool and by site

ggplot(TotalCarbon, aes(x=`Area_m2`, y=`MgC/Ha`, color=CarbonPool)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(~SITE_ID, scales = "free")+
  theme_classic()

ggplot(TotalCarbon, aes(x=`IsoperimetricInequality(Q)`, y=`MgC/Ha`, color=CarbonPool)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(~SITE_ID, scales = "free")+
  theme_classic()

```

```{r}
#Dividing carbon pool and site and by section
ggplot(TotalCarbon, aes(x=`IsoperimetricInequality(Q)`, y=`MgC/Ha`, color=SECTION)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(CarbonPool~SITE_ID, scales = "free")+
  theme_classic()


ggplot(TotalCarbon, aes(x=`Area_m2`, y=`MgC/Ha`, color=SECTION)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(CarbonPool~SITE_ID, scales = "free")+
  theme_classic()
#

ggplot(TotalCarbon, aes(x=`IsoperimetricInequality(Q)`, y=`MgC/Ha`, color=CarbonPool)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(CarbonPool~SITE_ID, scales = "free")+
  theme_classic()


ggplot(TotalCarbon, aes(x=`Area_m2`, y=`MgC/Ha`, color=CarbonPool)) + 
    geom_point() +
  geom_smooth()+
  facet_grid(CarbonPool~SITE_ID, scales = "free")+
  theme_classic()
# Try glm and se null

ggplot(TotalCarbon, aes(x=`IsoperimetricInequality(Q)`, y=`MgC/Ha`, color=SECTION)) + 
    geom_point() +
  geom_smooth(method = "glm", se = FALSE)+
  facet_grid(CarbonPool~SITE_ID, scales = "free")+
  theme_classic()


ggplot(TotalCarbon, aes(x=`Area_m2`, y=`MgC/Ha`, color=SECTION)) + 
    geom_point() +
  geom_smooth(method = "glm", se = FALSE)+
  facet_grid(CarbonPool~SITE_ID, scales = "free")+
  theme_classic()
```
```{r}
# box plots
ggplot(TotalCarbon, aes(x=SECTION, y=`MgC/Ha`, color=SECTION)) + 
  geom_boxplot()+
    geom_point() +
  facet_grid(CarbonPool~SITE_ID, scales = "free")+
  theme_classic()

ggplot(TotalCarbon, aes(x=SECTION, y=`MgC/Ha`, color=CarbonPool)) + 
  geom_boxplot()+
    geom_point() +
  facet_grid(CarbonPool~SITE_ID, scales = "free")+
  theme_classic()

ggplot(TotalCarbon, aes(x=SECTION, y=`MgC/Ha`, color=SITE_ID)) + 
  geom_boxplot()+
    geom_point() +
  facet_grid(CarbonPool~SITE_ID, scales = "free")+
  theme_classic()

```



```{r}

## ANOVA Carbon per site and section

summary(aov(`AG(MgC/Ha)`~SITE_ID *SECTION, data= TotalCarbon))
summary(aov(`BG(MgC/Ha)`~SITE_ID *SECTION, data= TotalCarbon))
summary(aov(`Soil(MgC/Ha)`~SITE_ID *SECTION, data= TotalCarbon))
summary(aov(`Soil(MgC/Ha)`~SITE_ID*PATCH*PLOT*SECTION, data= TotalCarbon))
summary(aov(`Soil(MgC/Ha)`~SITE_ID*PATCH*PLOT*SECTION*`IsoperimetricInequality(Q)`*Area_m2, data= TotalCarbon))
shapiro.test(residuals((aov(`Soil(MgC/Ha)`~SITE_ID*PATCH*PLOT*SECTION, data= TotalCarbon))))
shapiro.test(residuals((aov(`AG(MgC/Ha)`~SITE_ID*SECTION, data= TotalCarbon))))

      #Anova per area and shape

summary(aov(`AG(MgC/Ha)`~`IsoperimetricInequality(Q)`*Area_m2, data= TotalCarbon))
summary(aov(`BG(MgC/Ha)`~`IsoperimetricInequality(Q)`*Area_m2, data= TotalCarbon))
summary(aov(`Soil(MgC/Ha)`~`IsoperimetricInequality(Q)`*Area_m2, data= TotalCarbon))
summary(aov(`AG(MgC/Ha)`~ SITE_ID*`IsoperimetricInequality(Q)`*Area_m2, data= TotalCarbon))
summary(aov(`BG(MgC/Ha)`~ SITE_ID*`IsoperimetricInequality(Q)`*Area_m2, data= TotalCarbon))
summary(aov(`Soil(MgC/Ha)`~ SITE_ID*`IsoperimetricInequality(Q)`*Area_m2, data= TotalCarbon))

# Model lm
lm(`Soil(MgC/Ha)`~`IsoperimetricInequality(Q)`, data = TotalCarbon)
aov(lm(`Soil(MgC/Ha)`~`IsoperimetricInequality(Q)`, data = TotalCarbon))
summary(aov(lm(`Soil(MgC/Ha)`~`IsoperimetricInequality(Q)`, data = TotalCarbon)))

lm(`Soil(MgC/Ha)`~`IsoperimetricInequality(Q)`*Area_m2, data = TotalCarbon)
aov(lm(`Soil(MgC/Ha)`~`IsoperimetricInequality(Q)`*Area_m2, data = TotalCarbon))
summary(aov(lm(`Soil(MgC/Ha)`~`IsoperimetricInequality(Q)`*Area_m2, data = TotalCarbon)))

anova(lm(`Soil(MgC/Ha)`~`IsoperimetricInequality(Q)`, data = TotalCarbon), lm(`Soil(MgC/Ha)`~`IsoperimetricInequality(Q)`*Area_m2, data = TotalCarbon))

## Reorganize panels 

ggplot(TotalCarbon, aes(x = `IsoperimetricInequality(Q)`, y = `MgC/Ha`, color = CarbonPool)) +
  geom_point() +
  geom_smooth() +
  theme_classic()

ggplot(TotalCarbon, aes(x = `Area_m2`, y = `MgC/Ha`, color = CarbonPool)) +
  geom_point() +
  geom_smooth() +
  theme_classic()

ggplot(TotalCarbon, aes(x = `IsoperimetricInequality(Q)`, y = `MgC/Ha`, color = CarbonPool)) +
  geom_point() +
  geom_smooth() +
  facet_wrap(~SITE_ID, ncol = 2) +
  theme_classic()

ggplot(TotalCarbon, aes(x = `Area_m2`, y = `MgC/Ha`, color = CarbonPool)) +
  geom_point() +
  geom_smooth() +
  facet_wrap(~SITE_ID, ncol = 2) +
  theme_classic()

ggplot(TotalCarbon, aes(x = `IsoperimetricInequality(Q)`, y = `Soil(MgC/Ha)`)) +
  geom_point() +
  geom_smooth() +
  facet_wrap(~SITE_ID, ncol = 2) +
  theme_classic()

ggplot(TotalCarbon, aes(x = `Area_m2`, y = `Soil(MgC/Ha)`)) +
  geom_point() +
  geom_smooth() +
  facet_wrap(~SITE_ID, ncol = 2) +
  theme_classic()
## Graphs with average (median or mean)
## One graph with ecotones

```

